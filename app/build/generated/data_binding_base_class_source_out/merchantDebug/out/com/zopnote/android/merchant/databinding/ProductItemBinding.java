// Generated by data binding compiler. Do not edit!
package com.zopnote.android.merchant.databinding;

import android.databinding.DataBindingUtil;
import android.databinding.ViewDataBinding;
import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import com.android.volley.toolbox.NetworkImageView;
import com.zopnote.android.merchant.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ProductItemBinding extends ViewDataBinding {
  @NonNull
  public final TextView daysText;

  @NonNull
  public final TextView frequency;

  @NonNull
  public final TextView language;

  @NonNull
  public final LinearLayout llPrice;

  @NonNull
  public final LinearLayout llPrice2;

  @NonNull
  public final NetworkImageView logo;

  @NonNull
  public final TextView price;

  @NonNull
  public final ImageView productActionsButton;

  @NonNull
  public final TextView serviceCharge;

  @NonNull
  public final LinearLayout serviceChargeLayout;

  @NonNull
  public final TextView showAllPrices;

  @NonNull
  public final TextView title;

  protected ProductItemBinding(Object _bindingComponent, View _root, int _localFieldCount,
      TextView daysText, TextView frequency, TextView language, LinearLayout llPrice,
      LinearLayout llPrice2, NetworkImageView logo, TextView price, ImageView productActionsButton,
      TextView serviceCharge, LinearLayout serviceChargeLayout, TextView showAllPrices,
      TextView title) {
    super(_bindingComponent, _root, _localFieldCount);
    this.daysText = daysText;
    this.frequency = frequency;
    this.language = language;
    this.llPrice = llPrice;
    this.llPrice2 = llPrice2;
    this.logo = logo;
    this.price = price;
    this.productActionsButton = productActionsButton;
    this.serviceCharge = serviceCharge;
    this.serviceChargeLayout = serviceChargeLayout;
    this.showAllPrices = showAllPrices;
    this.title = title;
  }

  @NonNull
  public static ProductItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.product_item, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ProductItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ProductItemBinding>inflateInternal(inflater, R.layout.product_item, root, attachToRoot, component);
  }

  @NonNull
  public static ProductItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.product_item, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ProductItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ProductItemBinding>inflateInternal(inflater, R.layout.product_item, null, false, component);
  }

  public static ProductItemBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ProductItemBinding bind(@NonNull View view, @Nullable Object component) {
    return (ProductItemBinding)bind(component, view, R.layout.product_item);
  }
}
