// Generated by data binding compiler. Do not edit!
package com.zopnote.android.merchant.databinding;

import android.databinding.DataBindingUtil;
import android.databinding.ViewDataBinding;
import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;
import com.zopnote.android.merchant.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class AddCustomizationFragBinding extends ViewDataBinding {
  @NonNull
  public final LinearLayout annualSubscriptionDateSelectLayout;

  @NonNull
  public final EditText deliveryCharge;

  @NonNull
  public final LinearLayout deliveryChargeAmountLayout;

  @NonNull
  public final LinearLayout deliveryChargeLayout;

  @NonNull
  public final LinearLayout deliveryDaysAndPriceContainer;

  @NonNull
  public final LinearLayout deliveryDaysAndPricingLayout;

  @NonNull
  public final TextView endDatePicker;

  @NonNull
  public final LinearLayout endDatePickerLayout;

  @NonNull
  public final LinearLayout magazinePricingModeSelectionLayout;

  @NonNull
  public final TextView name;

  @NonNull
  public final LinearLayout paperPricingModeSelectionLayout;

  @NonNull
  public final EditText perIssuePrice;

  @NonNull
  public final RadioButton radioBtnAddDeliveryCharge;

  @NonNull
  public final RadioButton radioBtnAnnualSubscription;

  @NonNull
  public final RadioButton radioBtnNoDeliveryCharge;

  @NonNull
  public final RadioButton radioBtnPaperDailyPrice;

  @NonNull
  public final RadioButton radioBtnPaperMonthlyPrice;

  @NonNull
  public final RadioButton radioBtnRegularSubscription;

  @NonNull
  public final RadioGroup radioGroupDeliveryCharge;

  @NonNull
  public final RadioGroup radioGroupPaymentMode;

  @NonNull
  public final RadioGroup radioGroupPricingMode;

  @NonNull
  public final Button saveSubscriptionChangesButton;

  @NonNull
  public final TextView startDatePicker;

  @NonNull
  public final LinearLayout startDatePickerLayout;

  protected AddCustomizationFragBinding(Object _bindingComponent, View _root, int _localFieldCount,
      LinearLayout annualSubscriptionDateSelectLayout, EditText deliveryCharge,
      LinearLayout deliveryChargeAmountLayout, LinearLayout deliveryChargeLayout,
      LinearLayout deliveryDaysAndPriceContainer, LinearLayout deliveryDaysAndPricingLayout,
      TextView endDatePicker, LinearLayout endDatePickerLayout,
      LinearLayout magazinePricingModeSelectionLayout, TextView name,
      LinearLayout paperPricingModeSelectionLayout, EditText perIssuePrice,
      RadioButton radioBtnAddDeliveryCharge, RadioButton radioBtnAnnualSubscription,
      RadioButton radioBtnNoDeliveryCharge, RadioButton radioBtnPaperDailyPrice,
      RadioButton radioBtnPaperMonthlyPrice, RadioButton radioBtnRegularSubscription,
      RadioGroup radioGroupDeliveryCharge, RadioGroup radioGroupPaymentMode,
      RadioGroup radioGroupPricingMode, Button saveSubscriptionChangesButton,
      TextView startDatePicker, LinearLayout startDatePickerLayout) {
    super(_bindingComponent, _root, _localFieldCount);
    this.annualSubscriptionDateSelectLayout = annualSubscriptionDateSelectLayout;
    this.deliveryCharge = deliveryCharge;
    this.deliveryChargeAmountLayout = deliveryChargeAmountLayout;
    this.deliveryChargeLayout = deliveryChargeLayout;
    this.deliveryDaysAndPriceContainer = deliveryDaysAndPriceContainer;
    this.deliveryDaysAndPricingLayout = deliveryDaysAndPricingLayout;
    this.endDatePicker = endDatePicker;
    this.endDatePickerLayout = endDatePickerLayout;
    this.magazinePricingModeSelectionLayout = magazinePricingModeSelectionLayout;
    this.name = name;
    this.paperPricingModeSelectionLayout = paperPricingModeSelectionLayout;
    this.perIssuePrice = perIssuePrice;
    this.radioBtnAddDeliveryCharge = radioBtnAddDeliveryCharge;
    this.radioBtnAnnualSubscription = radioBtnAnnualSubscription;
    this.radioBtnNoDeliveryCharge = radioBtnNoDeliveryCharge;
    this.radioBtnPaperDailyPrice = radioBtnPaperDailyPrice;
    this.radioBtnPaperMonthlyPrice = radioBtnPaperMonthlyPrice;
    this.radioBtnRegularSubscription = radioBtnRegularSubscription;
    this.radioGroupDeliveryCharge = radioGroupDeliveryCharge;
    this.radioGroupPaymentMode = radioGroupPaymentMode;
    this.radioGroupPricingMode = radioGroupPricingMode;
    this.saveSubscriptionChangesButton = saveSubscriptionChangesButton;
    this.startDatePicker = startDatePicker;
    this.startDatePickerLayout = startDatePickerLayout;
  }

  @NonNull
  public static AddCustomizationFragBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.add_customization_frag, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static AddCustomizationFragBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<AddCustomizationFragBinding>inflateInternal(inflater, R.layout.add_customization_frag, root, attachToRoot, component);
  }

  @NonNull
  public static AddCustomizationFragBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.add_customization_frag, null, false, component)
   */
  @NonNull
  @Deprecated
  public static AddCustomizationFragBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<AddCustomizationFragBinding>inflateInternal(inflater, R.layout.add_customization_frag, null, false, component);
  }

  public static AddCustomizationFragBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static AddCustomizationFragBinding bind(@NonNull View view, @Nullable Object component) {
    return (AddCustomizationFragBinding)bind(component, view, R.layout.add_customization_frag);
  }
}
