// Generated by data binding compiler. Do not edit!
package com.zopnote.android.merchant.databinding;

import android.databinding.DataBindingUtil;
import android.databinding.ViewDataBinding;
import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.support.design.widget.TextInputEditText;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.Spinner;
import com.zopnote.android.merchant.R;
import com.zopnote.android.merchant.util.MobileNumberEditText;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class EditCustomerContentBinding extends ViewDataBinding {
  @NonNull
  public final LinearLayout addressLine1SpinnerContainer;

  @NonNull
  public final Spinner addressLine2;

  @NonNull
  public final Button cancelButton;

  @NonNull
  public final TextInputEditText doorNumber;

  @NonNull
  public final TextInputEditText email;

  @NonNull
  public final MobileNumberEditText mobileNumber;

  @NonNull
  public final TextInputEditText name;

  @NonNull
  public final ImageView pickContact;

  @NonNull
  public final LinearLayout root;

  @NonNull
  public final Spinner route;

  @NonNull
  public final Button submitButton;

  protected EditCustomerContentBinding(Object _bindingComponent, View _root, int _localFieldCount,
      LinearLayout addressLine1SpinnerContainer, Spinner addressLine2, Button cancelButton,
      TextInputEditText doorNumber, TextInputEditText email, MobileNumberEditText mobileNumber,
      TextInputEditText name, ImageView pickContact, LinearLayout root, Spinner route,
      Button submitButton) {
    super(_bindingComponent, _root, _localFieldCount);
    this.addressLine1SpinnerContainer = addressLine1SpinnerContainer;
    this.addressLine2 = addressLine2;
    this.cancelButton = cancelButton;
    this.doorNumber = doorNumber;
    this.email = email;
    this.mobileNumber = mobileNumber;
    this.name = name;
    this.pickContact = pickContact;
    this.root = root;
    this.route = route;
    this.submitButton = submitButton;
  }

  @NonNull
  public static EditCustomerContentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.edit_customer_content, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static EditCustomerContentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<EditCustomerContentBinding>inflateInternal(inflater, R.layout.edit_customer_content, root, attachToRoot, component);
  }

  @NonNull
  public static EditCustomerContentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.edit_customer_content, null, false, component)
   */
  @NonNull
  @Deprecated
  public static EditCustomerContentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<EditCustomerContentBinding>inflateInternal(inflater, R.layout.edit_customer_content, null, false, component);
  }

  public static EditCustomerContentBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static EditCustomerContentBinding bind(@NonNull View view, @Nullable Object component) {
    return (EditCustomerContentBinding)bind(component, view, R.layout.edit_customer_content);
  }
}
