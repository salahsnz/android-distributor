// Generated by data binding compiler. Do not edit!
package com.zopnote.android.merchant.databinding;

import android.databinding.DataBindingUtil;
import android.databinding.ViewDataBinding;
import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import com.zopnote.android.merchant.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ViewCustomerFragBinding extends ViewDataBinding {
  @NonNull
  public final Button addItemButton;

  @NonNull
  public final ImageView addNumber;

  @NonNull
  public final TextView addressLine1;

  @NonNull
  public final LinearLayout addressLine1Layout;

  @NonNull
  public final TextView addressLine2;

  @NonNull
  public final Button billHistory;

  @NonNull
  public final LinearLayout callCustomer;

  @NonNull
  public final TextView cashPaymentButton;

  @NonNull
  public final ImageView cashPaymentReverseButton;

  @NonNull
  public final TextView created;

  @NonNull
  public final LinearLayout createdLayout;

  @NonNull
  public final TextView doorNumber;

  @NonNull
  public final ImageView editInvoice;

  @NonNull
  public final TextView email;

  @NonNull
  public final TextView invoiceAmount;

  @NonNull
  public final LinearLayout invoiceLayout;

  @NonNull
  public final TextView invoicePaidDate;

  @NonNull
  public final LinearLayout invoicePaidDateLinear;

  @NonNull
  public final TextView manageSubscriptionButton;

  @NonNull
  public final TextView mobileNumber;

  @NonNull
  public final LinearLayout mobileNumberLayout;

  @NonNull
  public final TextView name;

  @NonNull
  public final TextView nameMobileSeparator;

  @NonNull
  public final TextView notes;

  @NonNull
  public final LinearLayout notesLayout;

  @NonNull
  public final TextView paymentMode;

  @NonNull
  public final TextView route;

  @NonNull
  public final LinearLayout sendRemainder;

  @NonNull
  public final ImageView subscriberView;

  @NonNull
  public final LinearLayout subscriptionsContainer;

  @NonNull
  public final LinearLayout subscriptionsLayout;

  @NonNull
  public final TextView viewBillButton;

  protected ViewCustomerFragBinding(Object _bindingComponent, View _root, int _localFieldCount,
      Button addItemButton, ImageView addNumber, TextView addressLine1,
      LinearLayout addressLine1Layout, TextView addressLine2, Button billHistory,
      LinearLayout callCustomer, TextView cashPaymentButton, ImageView cashPaymentReverseButton,
      TextView created, LinearLayout createdLayout, TextView doorNumber, ImageView editInvoice,
      TextView email, TextView invoiceAmount, LinearLayout invoiceLayout, TextView invoicePaidDate,
      LinearLayout invoicePaidDateLinear, TextView manageSubscriptionButton, TextView mobileNumber,
      LinearLayout mobileNumberLayout, TextView name, TextView nameMobileSeparator, TextView notes,
      LinearLayout notesLayout, TextView paymentMode, TextView route, LinearLayout sendRemainder,
      ImageView subscriberView, LinearLayout subscriptionsContainer,
      LinearLayout subscriptionsLayout, TextView viewBillButton) {
    super(_bindingComponent, _root, _localFieldCount);
    this.addItemButton = addItemButton;
    this.addNumber = addNumber;
    this.addressLine1 = addressLine1;
    this.addressLine1Layout = addressLine1Layout;
    this.addressLine2 = addressLine2;
    this.billHistory = billHistory;
    this.callCustomer = callCustomer;
    this.cashPaymentButton = cashPaymentButton;
    this.cashPaymentReverseButton = cashPaymentReverseButton;
    this.created = created;
    this.createdLayout = createdLayout;
    this.doorNumber = doorNumber;
    this.editInvoice = editInvoice;
    this.email = email;
    this.invoiceAmount = invoiceAmount;
    this.invoiceLayout = invoiceLayout;
    this.invoicePaidDate = invoicePaidDate;
    this.invoicePaidDateLinear = invoicePaidDateLinear;
    this.manageSubscriptionButton = manageSubscriptionButton;
    this.mobileNumber = mobileNumber;
    this.mobileNumberLayout = mobileNumberLayout;
    this.name = name;
    this.nameMobileSeparator = nameMobileSeparator;
    this.notes = notes;
    this.notesLayout = notesLayout;
    this.paymentMode = paymentMode;
    this.route = route;
    this.sendRemainder = sendRemainder;
    this.subscriberView = subscriberView;
    this.subscriptionsContainer = subscriptionsContainer;
    this.subscriptionsLayout = subscriptionsLayout;
    this.viewBillButton = viewBillButton;
  }

  @NonNull
  public static ViewCustomerFragBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.view_customer_frag, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ViewCustomerFragBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ViewCustomerFragBinding>inflateInternal(inflater, R.layout.view_customer_frag, root, attachToRoot, component);
  }

  @NonNull
  public static ViewCustomerFragBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.view_customer_frag, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ViewCustomerFragBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ViewCustomerFragBinding>inflateInternal(inflater, R.layout.view_customer_frag, null, false, component);
  }

  public static ViewCustomerFragBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ViewCustomerFragBinding bind(@NonNull View view, @Nullable Object component) {
    return (ViewCustomerFragBinding)bind(component, view, R.layout.view_customer_frag);
  }
}
