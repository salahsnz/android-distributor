// Generated by data binding compiler. Do not edit!
package com.zopnote.android.merchant.databinding;

import android.databinding.DataBindingUtil;
import android.databinding.ViewDataBinding;
import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.support.v7.widget.RecyclerView;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.TextView;
import com.zopnote.android.merchant.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class InvoiceFragBinding extends ViewDataBinding {
  @NonNull
  public final TextView address;

  @NonNull
  public final TextView billingPeriod;

  @NonNull
  public final LinearLayout billingPeriodLayout;

  @NonNull
  public final LinearLayout contentView;

  @NonNull
  public final TextView dueDate;

  @NonNull
  public final LinearLayout dueDateLayout;

  @NonNull
  public final TextView endDatePicker;

  @NonNull
  public final LinearLayout endDatePickerLayout;

  @NonNull
  public final TextView filteredAdvanceOrPrevious;

  @NonNull
  public final TextView invoiceDate;

  @NonNull
  public final LinearLayout invoiceItemsLayout;

  @NonNull
  public final TextView invoiceNumber;

  @NonNull
  public final LinearLayout linearFilteredAdvanceOrPrevious;

  @NonNull
  public final LinearLayout linearHeaderContent;

  @NonNull
  public final LinearLayout linearHeaderContentTotal;

  @NonNull
  public final LinearLayout linearPreviousMonth;

  @NonNull
  public final LoadingViewBinding loadingView;

  @NonNull
  public final TextView merchantName;

  @NonNull
  public final TextView name;

  @NonNull
  public final NetworkErrorBinding networkErrorView;

  @NonNull
  public final NoContentAvailableBinding noDataView;

  @NonNull
  public final TextView previousBalanceAtBottom;

  @NonNull
  public final TextView previousMonthBalance;

  @NonNull
  public final RadioButton radioBtnCustom;

  @NonNull
  public final RadioButton radioBtnThisMonth;

  @NonNull
  public final RadioButton radioBtnThisWeek;

  @NonNull
  public final RadioGroup radioGroupPeriod;

  @NonNull
  public final RadioGroup radioGroupPeriod1;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final TextView startDatePicker;

  @NonNull
  public final LinearLayout startDatePickerLayout;

  @NonNull
  public final TextView totalDueAtBottom;

  @NonNull
  public final TextView totalDueAtTop;

  @NonNull
  public final TextView updateInvoiceItemButton;

  protected InvoiceFragBinding(Object _bindingComponent, View _root, int _localFieldCount,
      TextView address, TextView billingPeriod, LinearLayout billingPeriodLayout,
      LinearLayout contentView, TextView dueDate, LinearLayout dueDateLayout,
      TextView endDatePicker, LinearLayout endDatePickerLayout, TextView filteredAdvanceOrPrevious,
      TextView invoiceDate, LinearLayout invoiceItemsLayout, TextView invoiceNumber,
      LinearLayout linearFilteredAdvanceOrPrevious, LinearLayout linearHeaderContent,
      LinearLayout linearHeaderContentTotal, LinearLayout linearPreviousMonth,
      LoadingViewBinding loadingView, TextView merchantName, TextView name,
      NetworkErrorBinding networkErrorView, NoContentAvailableBinding noDataView,
      TextView previousBalanceAtBottom, TextView previousMonthBalance, RadioButton radioBtnCustom,
      RadioButton radioBtnThisMonth, RadioButton radioBtnThisWeek, RadioGroup radioGroupPeriod,
      RadioGroup radioGroupPeriod1, RecyclerView recyclerView, TextView startDatePicker,
      LinearLayout startDatePickerLayout, TextView totalDueAtBottom, TextView totalDueAtTop,
      TextView updateInvoiceItemButton) {
    super(_bindingComponent, _root, _localFieldCount);
    this.address = address;
    this.billingPeriod = billingPeriod;
    this.billingPeriodLayout = billingPeriodLayout;
    this.contentView = contentView;
    this.dueDate = dueDate;
    this.dueDateLayout = dueDateLayout;
    this.endDatePicker = endDatePicker;
    this.endDatePickerLayout = endDatePickerLayout;
    this.filteredAdvanceOrPrevious = filteredAdvanceOrPrevious;
    this.invoiceDate = invoiceDate;
    this.invoiceItemsLayout = invoiceItemsLayout;
    this.invoiceNumber = invoiceNumber;
    this.linearFilteredAdvanceOrPrevious = linearFilteredAdvanceOrPrevious;
    this.linearHeaderContent = linearHeaderContent;
    this.linearHeaderContentTotal = linearHeaderContentTotal;
    this.linearPreviousMonth = linearPreviousMonth;
    this.loadingView = loadingView;
    this.merchantName = merchantName;
    this.name = name;
    this.networkErrorView = networkErrorView;
    this.noDataView = noDataView;
    this.previousBalanceAtBottom = previousBalanceAtBottom;
    this.previousMonthBalance = previousMonthBalance;
    this.radioBtnCustom = radioBtnCustom;
    this.radioBtnThisMonth = radioBtnThisMonth;
    this.radioBtnThisWeek = radioBtnThisWeek;
    this.radioGroupPeriod = radioGroupPeriod;
    this.radioGroupPeriod1 = radioGroupPeriod1;
    this.recyclerView = recyclerView;
    this.startDatePicker = startDatePicker;
    this.startDatePickerLayout = startDatePickerLayout;
    this.totalDueAtBottom = totalDueAtBottom;
    this.totalDueAtTop = totalDueAtTop;
    this.updateInvoiceItemButton = updateInvoiceItemButton;
  }

  @NonNull
  public static InvoiceFragBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.invoice_frag, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static InvoiceFragBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<InvoiceFragBinding>inflateInternal(inflater, R.layout.invoice_frag, root, attachToRoot, component);
  }

  @NonNull
  public static InvoiceFragBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.invoice_frag, null, false, component)
   */
  @NonNull
  @Deprecated
  public static InvoiceFragBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<InvoiceFragBinding>inflateInternal(inflater, R.layout.invoice_frag, null, false, component);
  }

  public static InvoiceFragBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static InvoiceFragBinding bind(@NonNull View view, @Nullable Object component) {
    return (InvoiceFragBinding)bind(component, view, R.layout.invoice_frag);
  }
}
