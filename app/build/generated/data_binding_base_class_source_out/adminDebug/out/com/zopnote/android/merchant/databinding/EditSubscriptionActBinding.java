// Generated by data binding compiler. Do not edit!
package com.zopnote.android.merchant.databinding;

import android.databinding.DataBindingUtil;
import android.databinding.ViewDataBinding;
import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.support.design.widget.TextInputEditText;
import android.support.v7.widget.Toolbar;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;
import com.zopnote.android.merchant.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class EditSubscriptionActBinding extends ViewDataBinding {
  @NonNull
  public final TextView customerAddress;

  @NonNull
  public final TextView deleteSubscriptionButton;

  @NonNull
  public final TextView endDatePicker;

  @NonNull
  public final LinearLayout endDatePickerLayout;

  @NonNull
  public final TextInputEditText quantity;

  @NonNull
  public final TextView removeEndDate;

  @NonNull
  public final Button saveSubscriptionChangesButton;

  @NonNull
  public final TextView startDatePicker;

  @NonNull
  public final LinearLayout startDatePickerLayout;

  @NonNull
  public final TextView subscriptionName;

  @NonNull
  public final TextInputEditText tag;

  @NonNull
  public final Toolbar toolbar;

  protected EditSubscriptionActBinding(Object _bindingComponent, View _root, int _localFieldCount,
      TextView customerAddress, TextView deleteSubscriptionButton, TextView endDatePicker,
      LinearLayout endDatePickerLayout, TextInputEditText quantity, TextView removeEndDate,
      Button saveSubscriptionChangesButton, TextView startDatePicker,
      LinearLayout startDatePickerLayout, TextView subscriptionName, TextInputEditText tag,
      Toolbar toolbar) {
    super(_bindingComponent, _root, _localFieldCount);
    this.customerAddress = customerAddress;
    this.deleteSubscriptionButton = deleteSubscriptionButton;
    this.endDatePicker = endDatePicker;
    this.endDatePickerLayout = endDatePickerLayout;
    this.quantity = quantity;
    this.removeEndDate = removeEndDate;
    this.saveSubscriptionChangesButton = saveSubscriptionChangesButton;
    this.startDatePicker = startDatePicker;
    this.startDatePickerLayout = startDatePickerLayout;
    this.subscriptionName = subscriptionName;
    this.tag = tag;
    this.toolbar = toolbar;
  }

  @NonNull
  public static EditSubscriptionActBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.edit_subscription_act, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static EditSubscriptionActBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<EditSubscriptionActBinding>inflateInternal(inflater, R.layout.edit_subscription_act, root, attachToRoot, component);
  }

  @NonNull
  public static EditSubscriptionActBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.edit_subscription_act, null, false, component)
   */
  @NonNull
  @Deprecated
  public static EditSubscriptionActBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<EditSubscriptionActBinding>inflateInternal(inflater, R.layout.edit_subscription_act, null, false, component);
  }

  public static EditSubscriptionActBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static EditSubscriptionActBinding bind(@NonNull View view, @Nullable Object component) {
    return (EditSubscriptionActBinding)bind(component, view, R.layout.edit_subscription_act);
  }
}
