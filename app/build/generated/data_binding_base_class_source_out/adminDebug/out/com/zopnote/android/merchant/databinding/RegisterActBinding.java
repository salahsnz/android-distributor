// Generated by data binding compiler. Do not edit!
package com.zopnote.android.merchant.databinding;

import android.databinding.DataBindingUtil;
import android.databinding.ViewDataBinding;
import android.support.annotation.NonNull;
import android.support.annotation.Nullable;
import android.support.v7.widget.Toolbar;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import com.zopnote.android.merchant.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class RegisterActBinding extends ViewDataBinding {
  @NonNull
  public final TextView customerInfo;

  @NonNull
  public final Button finishReg;

  @NonNull
  public final LinearLayout llRegisterFields;

  @NonNull
  public final LinearLayout llRegistered;

  @NonNull
  public final EditText merchantBusinessName;

  @NonNull
  public final EditText merchantCity;

  @NonNull
  public final EditText merchantMobile;

  @NonNull
  public final EditText merchantName;

  @NonNull
  public final EditText merchantState;

  @NonNull
  public final Button registerNext;

  @NonNull
  public final TextView registerNote;

  @NonNull
  public final Toolbar toolbar;

  protected RegisterActBinding(Object _bindingComponent, View _root, int _localFieldCount,
      TextView customerInfo, Button finishReg, LinearLayout llRegisterFields,
      LinearLayout llRegistered, EditText merchantBusinessName, EditText merchantCity,
      EditText merchantMobile, EditText merchantName, EditText merchantState, Button registerNext,
      TextView registerNote, Toolbar toolbar) {
    super(_bindingComponent, _root, _localFieldCount);
    this.customerInfo = customerInfo;
    this.finishReg = finishReg;
    this.llRegisterFields = llRegisterFields;
    this.llRegistered = llRegistered;
    this.merchantBusinessName = merchantBusinessName;
    this.merchantCity = merchantCity;
    this.merchantMobile = merchantMobile;
    this.merchantName = merchantName;
    this.merchantState = merchantState;
    this.registerNext = registerNext;
    this.registerNote = registerNote;
    this.toolbar = toolbar;
  }

  @NonNull
  public static RegisterActBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.register_act, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static RegisterActBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<RegisterActBinding>inflateInternal(inflater, R.layout.register_act, root, attachToRoot, component);
  }

  @NonNull
  public static RegisterActBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.register_act, null, false, component)
   */
  @NonNull
  @Deprecated
  public static RegisterActBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<RegisterActBinding>inflateInternal(inflater, R.layout.register_act, null, false, component);
  }

  public static RegisterActBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static RegisterActBinding bind(@NonNull View view, @Nullable Object component) {
    return (RegisterActBinding)bind(component, view, R.layout.register_act);
  }
}
